/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.dc.view;

import com.dc.controller.AdminController;
import com.dc.controller.SensorController;
import com.dc.model.SensorModel;
import com.dc.model.UserModel;
import com.dc.server.ProxyHandler;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kasun
 */
public class AddSensors extends javax.swing.JFrame {

    UserModel umSelected;

    /**
     * Creates new form AddSensors
     */
    public AddSensors() {
        initComponents();

        view_data();    //retrieve all sensor data
        fill_persons(); //get users
    }

    public void view_data() {

        //assign vectors for show in the table
        ArrayList<SensorModel> list = null;
        Vector<Vector<String>> vectors = new Vector<>();
        Vector<String> header = new Vector<>();

        try {
            list = SensorController.get();  //get sensor data from server side
        } catch (Exception ex) {
            Logger.getLogger(AddSensors.class.getName()).log(Level.SEVERE, null, ex);
        }

        //loop through sensors
        for (SensorModel se : list) {
            //assign data to vectors
            Vector<String> vector = new Vector<>();
            vector.add(String.valueOf(se.getId()));
            vector.add(se.getFloorNo());
            vector.add(se.getRoomNo());

            //check the status of the sensor
            if (se.getStatus() == 1) {
                vector.add("Active");
            } else {
                vector.add("Inactive");
            }

            vectors.add(vector);
        }
        
        //add table headers
        header.add("ID");
        header.add("Floor No");
        header.add("Room No");
        header.add("Status");

        DefaultTableModel model = new DefaultTableModel(vectors, header);
        table_sensors.setModel(model);  //set table
    }

    //method to add users to dropdown
    public void fill_persons() {

        ArrayList<UserModel> list = null;   //array to save user data

        try {
            list = AdminController.getUsers();  //get users from server side
        } catch (Exception ex) {
            Logger.getLogger(AddSensors.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //add users to drop down
        for (UserModel um : list) {
            person.addItem(String.valueOf(um.getId()) + ". " + um.getName());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        floor_no = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        room_no = new javax.swing.JTextField();
        register_btn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_sensors = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        status = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        person = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Floor No:");

        floor_no.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        floor_no.setForeground(new java.awt.Color(0, 0, 153));
        floor_no.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        floor_no.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                floor_noMouseClicked(evt);
            }
        });
        floor_no.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                floor_noActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Room No:");

        room_no.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        room_no.setForeground(new java.awt.Color(0, 0, 153));
        room_no.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        room_no.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                room_noMouseClicked(evt);
            }
        });
        room_no.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                room_noActionPerformed(evt);
            }
        });

        register_btn.setBackground(new java.awt.Color(102, 102, 255));
        register_btn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        register_btn.setForeground(new java.awt.Color(255, 255, 255));
        register_btn.setText("Register");
        register_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                register_btnActionPerformed(evt);
            }
        });

        table_sensors.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Floor No", "Room No"
            }
        ));
        table_sensors.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_sensorsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_sensors);

        jPanel5.setBackground(new java.awt.Color(0, 0, 204));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Add Sensors");

        jLabel10.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Logout");
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10logoutMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel10MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel10MouseExited(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Gill Sans MT", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("X");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel1MousePressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Gill Sans MT", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Back");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel2MousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 679, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(32, 32, 32))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap())
        );

        status.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        status.setForeground(new java.awt.Color(0, 0, 153));
        status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive" }));
        status.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Status");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Responsible Person");

        person.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        person.setForeground(new java.awt.Color(0, 0, 153));
        person.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                personActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(room_no, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(jLabel9)
                    .addComponent(floor_no)
                    .addComponent(jLabel8)
                    .addComponent(register_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15)
                    .addComponent(status, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel16)
                    .addComponent(person, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 693, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(floor_no, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(room_no, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(jLabel15)
                        .addGap(6, 6, 6)
                        .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel16)
                        .addGap(11, 11, 11)
                        .addComponent(person, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(register_btn, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                        .addGap(48, 48, 48))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void floor_noMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_floor_noMouseClicked

    }//GEN-LAST:event_floor_noMouseClicked

    private void floor_noActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_floor_noActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_floor_noActionPerformed

    private void room_noMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_room_noMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_room_noMouseClicked

    private void room_noActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_room_noActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_room_noActionPerformed

    private void register_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_register_btnActionPerformed
        
        //get form data
        String floor = floor_no.getText();
        String room = room_no.getText();
        int getStatus;

        //get provided sensor status
        if (status.getSelectedItem().equals("Active")) {
            getStatus = 1;
        } else {
            getStatus = 0;
        }
        
        //assign value to the object
        SensorModel sm = new SensorModel(floor, room, getStatus);

        //if user clicked register, save sensor data in db
        if (evt.getActionCommand().equalsIgnoreCase("register")) {
            try {
                boolean value = SensorController.add(sm, umSelected);   //server side method to add users
                if (value) {
                    JOptionPane.showMessageDialog(null, "Location Added Successfully"); //success message
                    //empty the form values
                    floor_no.setText("");
                    room_no.setText("");

                    view_data();    //refresh table data
                }
            } catch (Exception ex) {
                Logger.getLogger(AddSensors.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {    //if user clicked edit, update sensor data
            try {
                int row = table_sensors.getSelectedRow();   //get selected sensor
                String click = (table_sensors.getModel().getValueAt(row, 0).toString());
                sm.setId(Integer.parseInt(click));

                boolean value = SensorController.edit(sm, umSelected);  //server side function to update sensor data
                if (value) {
                    JOptionPane.showMessageDialog(null, "Location Edited Successfully");    //success message
                    floor_no.setText("");
                    room_no.setText("");

                    register_btn.setText("Register");   //set button back to register
                    view_data();
                }
            } catch (Exception ex) {
                Logger.getLogger(AddSensors.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_register_btnActionPerformed

    private void table_sensorsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_sensorsMouseClicked

        //get sensor clicked by the user
        int row = table_sensors.getSelectedRow();
        String click = (table_sensors.getModel().getValueAt(row, 0).toString());

        try {
            SensorModel sm = SensorController.getById(click);   //get details of the clicked sensor from server side
            //set data to the form
            floor_no.setText(sm.getFloorNo());
            room_no.setText(sm.getRoomNo());

            //set status
            String getStatus;
            if (sm.getStatus() == 1) {
                getStatus = "Active";
            } else {
                getStatus = "Inactive";
            }

            status.setSelectedItem(getStatus);
            person.setSelectedItem(sm.getResId() + ". " + sm.getResName()); //set username
            
            register_btn.setText("Edit");   //set button to edit

        } catch (Exception ex) {
            Logger.getLogger(AddSensors.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_table_sensorsMouseClicked

    private void jLabel10logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10logoutMouseClicked

    }//GEN-LAST:event_jLabel10logoutMouseClicked

    private void jLabel10MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseEntered

    }//GEN-LAST:event_jLabel10MouseEntered

    private void jLabel10MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseExited

    }//GEN-LAST:event_jLabel10MouseExited

    private void jLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MousePressed
        System.exit(0);
    }//GEN-LAST:event_jLabel1MousePressed

    Main main;
    private void jLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MousePressed
        if (main == null) {
            main = new Main();
            main.setVisible(true);
        } else {
            main.setVisible(true);
        }
        dispose();
    }//GEN-LAST:event_jLabel2MousePressed

    private void statusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusActionPerformed

    }//GEN-LAST:event_statusActionPerformed

    private void personActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_personActionPerformed

        String item = (String) person.getSelectedItem();
        Pattern p = Pattern.compile("^[^.]+");
        Matcher m = p.matcher(item);
        if (m.find()) {
            try {
                //get user details by id and assign to a global variable
                umSelected = AdminController.userById(Integer.parseInt(m.group(0)));
            } catch (Exception ex) {
                Logger.getLogger(AddSensors.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_personActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddSensors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddSensors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddSensors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddSensors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddSensors().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField floor_no;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> person;
    private javax.swing.JButton register_btn;
    private javax.swing.JTextField room_no;
    private javax.swing.JComboBox<String> status;
    private javax.swing.JTable table_sensors;
    // End of variables declaration//GEN-END:variables
}
